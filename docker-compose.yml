version: '2.1'

services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    network_mode: "host"
    hostname: localhost
    restart: always
    healthcheck:
      test: "exit 0"

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: ${IP_Kafka}
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: ${IP_Zookeeper}
    network_mode: "host"
    hostname: localhost
    depends_on:
      - zookeeper
    restart: always
    healthcheck:
      test: "exit 0"
  # index-microservice:
  #   build: indexer-microservice/
  #   image: indexer-microservice
  #   restart: always
  #   network_mode: "host"
  #   hostname: localhost
  #   ports:
  #     - 8091:8091
  #   depends_on:
  #     - neo4j
  #   healthcheck:
  #     test: "exit 0"


  neo4j:
    image: neo4j:latest
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
     - EXTENSION_SCRIPT=/home/syam/product_bleh/neo4j-init.sh
    volumes:
      - $HOME/neo4j/data:/data
      


      

  

  # redis:
  #   image: redis:latest
  #   container_name: "redis"
  #   command: redis-server --appendonly yes
  #   mem_limit: 2g
  #   volumes:
  #     - ./data:/data
  #   ports:
  #     - 6379:6379
  #   restart: always
  #   healthcheck:
  #     test: "exit 0"    

  # mongodb:
  #   image: mongo:latest
  #   container_name: "mongodb"
  #   volumes:
  #     - ./data/db:/data/db
  #   ports:
  #     - 27017:27017
      

